//
//  AppCoordinator.swift
//  --#projectName#--
//
//  Created with SwiftSkeleton ðŸ¦´ 
//

import UIKit

class Coordinator: AnyObject {
    
    weak var parentCoordinator: Coordinator?
    var childCoordinator : Coordinator?
    
    func rootViewController() -> UIViewController? {
        return nil
    }
    
    func start(){
        
    }
    
    func navigate(to destination: Coordinator, transition : UIModalPresentationStyle = .fullScreen){
        
        destination.start()
        
        if let destinationRootViewController = destination.rootViewController(){
            destination.parentCoordinator = self
            self.childCoordinator = destination
            destinationRootViewController.modalPresentationStyle = transition
            self.rootViewController()?.present(destinationRootViewController, animated: true)
        }
        
    }
    
    func finish(){
        
        self.parentCoordinator?.childCoordinator = nil
        self.parentCoordinator = nil
        
        self.childCoordinator?.parentCoordinator?.finish()
        self.childCoordinator = nil
        
        self.rootViewController()?.dismiss(animated: true)
        
    }
    
    func back(){
        
        if let  nav = rootViewController() as? UINavigationController, nav.viewControllers.count > 1 {
            nav.popViewController(animated: true)
        }else {
            finish()
        }
    }
    
    deinit {
        print("Deinitialized AppCoordinator")
    }
    
    
    
}


enum AppCoordinatorChild {
    
    --#enumCases#--
    
    func initialize() -> Coordinator {
        switch self {
            --#enumInitialization#--
        }
    }
}

class AppCoordinator: Coordinator {
    
    var window: UIWindow
    
    var childs = [AppCoordinatorChild: Coordinator]()
    
    init(window: UIWindow) {
        self.window = window
    }
    
    override func rootViewController() -> UIViewController? {
        return nil
    }
    
    override func start() {
        --#defaultFlow#--
    }
    
    func showCoordinator( coordinator : AppCoordinatorChild) {
        
        let _coordinator = coordinator.initialize()
        self.childCoordinator = _coordinator
        _coordinator.parentCoordinator = self
        _coordinator.start()
        window.rootViewController = _coordinator.rootViewController()
        window.makeKeyAndVisible()
    }
   
}
